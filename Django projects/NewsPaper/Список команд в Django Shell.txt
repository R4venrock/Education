1. Создать двух пользователей (с помощью метода User.objects.create_user('username')).
	u1 = User.objects.create_user(username='Nick')
	u2 = User.objects.create_user(username='John')

2. Создать два объекта модели Author, связанные с пользователями.
	Author.objects.create(authorUser=u1)
	Author.objects.create(authorUser=u2)

3. Добавить 4 категории в модель Category.
	Category.objects.create(name='IT')
	Category.objects.create(name='NEST')
	Category.objects.create(name='DRAGOON')
	Category.objects.create(name='FUN')

4. Добавить 2 статьи и 1 новость.
	Post.objects.create(author=author, category_type='NW', title='firsttitle', text='firsttext')
	Post.objects.create(author=author, category_type='AR', title='secondtitle', text='firstarticletext')
	Post.objects.create(author=author, category_type='AR', title='thirdtitle', text='secondarticletext')

5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
	Post.objects.get(id=1).post_category.add(Category.objects.get(id=1))
	Post.objects.get(id=1).post_category.add(Category.objects.get(id=2)) 
	Post.objects.get(id=2).post_category.add(Category.objects.get(id=3))
	Post.objects.get(id=3).post_category.add(Category.objects.get(id=4))

6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
	Comment.objects.create(comment_post=Post.objects.get(id=1), comment_user=Author.objects.get(id=1).author_user, text='sometextbyauthor')
	Comment.objects.create(comment_post=Post.objects.get(id=2), comment_user=Author.objects.get(id=1).author_user, text='somesecondtextbyauthor')
	Comment.objects.create(comment_post=Post.objects.get(id=3), comment_user=Author.objects.get(id=1).author_user, text='somethirdtextbyauthor')
	Comment.objects.create(comment_post=Post.objects.get(id=1), comment_user=Author.objects.get(id=1).author_user, text='somefourthtextbyauthor')

7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
	Post.objects.get(id=1).like()
	Post.objects.get(id=1).like()
	Post.objects.get(id=1).like()
	Post.objects.get(id=1).like()
	Post.objects.get(id=1).like()
	Post.objects.get(id=2).like()
	Post.objects.get(id=2).like()
	Post.objects.get(id=2).like()
	Post.objects.get(id=2).like()
	Post.objects.get(id=3).like()
	Post.objects.get(id=3).like()
	Post.objects.get(id=3).dislike()
	Post.objects.get(id=3).dislike()
	Post.objects.get(id=3).dislike()
	Post.objects.get(id=3).dislike()
	Post.objects.get(id=3).dislike()
	Post.objects.get(id=3).dislike()
	Post.objects.get(id=3).dislike()
	
	Comment.objects.get(id=1).like()
	Comment.objects.get(id=1).like()
	Comment.objects.get(id=2).dislike() 
	Comment.objects.get(id=2).dislike()
	Comment.objects.get(id=3).dislike()
	Comment.objects.get(id=3).like()
	Comment.objects.get(id=3).like()
	Comment.objects.get(id=4).like()
	Comment.objects.get(id=4).like()
	Comment.objects.get(id=4).dislike()

	Comment.objects.get(id=4).rating
	Comment.objects.get(id=3).rating
	Comment.objects.get(id=2).rating
	Comment.objects.get(id=1).rating
	Post.objects.get(id=1).rating
	Post.objects.get(id=2).rating
	Post.objects.get(id=3).rating

8. Обновить рейтинги пользователей.
	a=Author.objects.get(id=1)
	b=Author.objects.get(id=2)
	a.update_rating()
	b.update_rating()
	a.rating_author
	b.rating_author

9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
	a = Author.objects.order_by('-rating_author')[:1]
	for i in a:
...     i.rating_author
...     i.author_user.username

10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
	a = Post.objects.order_by('-rating')
	for i in a:
...     i.date_creation
...     i.author
...     i.rating
...     i.title
...     i.preview

11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
	a = Comment.objects.order_by('-rating')
	for i in a:     
...     i.date_creation                     
...     i.comment_user
...     i.rating
...     i.text
